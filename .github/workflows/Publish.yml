name: Build & publish package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:
  Publish:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test-results.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/coverage-results.xml

    - name: Publish test report
      uses: dorny/test-reporter@v1.6.0
      if: always()
      with:
        name: Test results
        path: "**/test-results.trx"
        reporter: dotnet-trx
        fail-on-error: true

    - name: Create code coverage summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: always()
      with:
        filename: "**/coverage-results.xml"
        badge: true
        format: markdown
        output: both
        thresholds: '60 80'
 
    - name: Read code coverage summary
      id: read_code_coverage_summary
      if: always()
      run: |
        code_coverage_summary=$(cat code-coverage-results.md)
        code_coverage_summary="${code_coverage_summary//$'\n'/'\\n'}"
        code_coverage_summary="${code_coverage_summary//$'\r'/'\\r'}"
        code_coverage_summary="${code_coverage_summary//$'"'/'\\"'}"
        echo "code_coverage_summary=$code_coverage_summary" >> $GITHUB_ENV
      working-directory: .

    - name: Test event
      run: |
        sudo apt-get install jq 
        event_data=$(cat '${{ github.event_path }}')
        event_data="${event_data//$'\n'/''}"
        event_data="${event_data//$'\r'/''}"
        echo "$event_path"

    - name: Publish code coverage summary
      if: always()
      run: |
        curl \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/maikelbos0/VDT.Core.Blazor.GlobalEventHandler/check-runs \
        -d $'{"name":"Code coverage summary","head_sha":"${{ github.sha }}","status":"completed","conclusion":"success","output":{"title":"Code coverage summary","summary":"${{ env.code_coverage_summary }}"}}'

    - name: Publish package
      if: github.event_name == 'push'
      run: |
        current_version=$(grep -Po "\d+\.\d+\.\d+" <<< $(find . -name "*.nupkg"))
        published_versions=$(curl https://api.nuget.org/v3-flatcontainer/VDT.Core.Blazor.GlobalEventHandler/index.json | jq '.versions')
        if [[ $published_versions != *\""$current_version"\"* ]]
        then
          echo "Publishing version $current_version"                
          dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGETAPIKEY }} --source https://api.nuget.org/v3/index.json
        fi
