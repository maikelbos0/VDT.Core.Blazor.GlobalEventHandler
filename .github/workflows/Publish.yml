name: Build & publish package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:
  Publish:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src

    steps:
                                 
    - name: Checkout
      uses: actions/checkout@master

    - name: Checkout 
      uses: actions/checkout@master
      with:
        repository: maikelbos0/ActionHelpers
        path: 'helpers'

    - name: Install tools
      run: |
        sudo apt-get install -y xsltproc
        sudo apt-get install -y xmlstarlet

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test-results.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/coverage-results.xml

    - name: Publish test results
      if: always()
      run: |
        test_results=$(find '.' -name "*.trx" | xargs xsltproc '../helpers/test-results.xslt') # todo add name of test run to xslt
        if [ $(xmlstarlet sel -N x="http://microsoft.com/schemas/VisualStudio/TeamTest/2010" -t -c 'count(//x:UnitTestResult[@outcome="Failed"])' -n $(find '.' -name '*.trx')) = '0' ]
        then 
          conclusion='success'
        else 
          conclusion='failure'
        fi
        sha=$(cat '${{ github.event_path }}' | jq -r '.after')
        request=$(jq --null-input --arg sha "$sha" --arg conclusion "$conclusion" --arg test_results "$test_results" '{"name":"Test results","head_sha":$sha,"status":"completed","conclusion":$conclusion,"output":{"title":"Test results","summary":$test_results}}')
        curl -s -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/maikelbos0/VDT.Core.Blazor.GlobalEventHandler/check-runs -d "$request"

    - name: Publish code coverage results
      if: always()
      run: |
        coverage_results=$(find '.' -name "*coverage*.xml" | xargs xsltproc '../helpers/coverage-results.xslt') # todo add name of test run to xslt
        sha=$(cat '${{ github.event_path }}' | jq -r '.after')
        request=$(jq --null-input --arg sha "$sha" --arg coverage_results "$coverage_results" '{"name":"Code coverage results","head_sha":$sha,"status":"completed","conclusion":"success","output":{"title":"Code coverage results","summary":$coverage_results}}')
        curl -s -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/maikelbos0/VDT.Core.Blazor.GlobalEventHandler/check-runs -d "$request"

    - name: Publish package
      if: github.event_name == 'push'
      run: |
        current_version=$(grep -Po "\d+\.\d+\.\d+" <<< $(find . -name "*.nupkg"))
        published_versions=$(curl -s https://api.nuget.org/v3-flatcontainer/VDT.Core.Blazor.GlobalEventHandler/index.json | jq '.versions')
        if [[ $published_versions != *\""$current_version"\"* ]]
        then
          echo "Publishing version $current_version"                
          dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGETAPIKEY }} --source https://api.nuget.org/v3/index.json
        fi
