name: Build & publish package

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:
  Publish:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test-results.trx"

    - name: Test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test results
        path: "**/test-results.trx"
        reporter: dotnet-trx
        fail-on-error: true

    - name: Get current version
      id: get_current_version
      run: |
        current_version=$(grep -Po "\d+\.\d+\.\d+" <<< $(find . -name "*.nupkg"))
        echo "current_version=$current_version" >> $GITHUB_ENV

    - name: Output current version
      run: echo "${{ env.current_version }}" 

    - name: Get published versions
      run: |
        published_versions=$(curl https://api.nuget.org/v3-flatcontainer/VDT.Core.Blazor.GlobalEventHandler/index.json)
        published_versions="${published_versions//$'\n'/''}"
        published_versions="${published_versions//$'\r'/''}"
        echo "published_versions=$published_versions" >> $GITHUB_ENV

    - name: Output published versions
      run: echo "${{ env.published_versions }}" 

    - name: Output published versions json
      run: echo "${{ fromJson(env.published_versions) }}"

    - name: Output published versions json array
      run: echo "${{ fromJson(env.published_versions).versions }}"
      
#https://docs.github.com/en/github-ae@latest/actions/learn-github-actions/expressions
# contains(array, item)

    - name: Test false
      if: contains(fromJson(env.published_versions).versions, '1.2.3')
      run: echo "Test false"

    - name: Test true
      if: contains(fromJson(env.published_versions).versions, '1.1.3')
      run: echo "Test true"

    - name: Test true
      if: contains(fromJson(env.published_versions).versions, env.current_version)
      run: echo "Test true"

#    - name: Publish
#      run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGETAPIKEY }} --source https://api.nuget.org/v3/index.json
