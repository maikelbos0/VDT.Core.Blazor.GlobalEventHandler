name: Build & publish package

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:
  Publish:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test-results.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/coverage-results.xml

    - name: Publish test report
      uses: dorny/test-reporter@v1.6.0
      if: always()
      with:
        name: Test results
        path: "**/test-results.trx"
        reporter: dotnet-trx
        fail-on-error: true

    - name: Create code coverage summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: "**/coverage-results.xml"
        badge: true
        format: markdown
        output: both
        thresholds: '60 80'

    - name: Get current version
      id: get_current_version
      run: |
        current_version=$(grep -Po "\d+\.\d+\.\d+" <<< $(find . -name "*.nupkg"))
        echo "current_version=$current_version" >> $GITHUB_ENV

    - name: Get published versions
      run: |
        published_versions=$(curl https://api.nuget.org/v3-flatcontainer/VDT.Core.Blazor.GlobalEventHandler/index.json)
        published_versions="${published_versions//$'\n'/''}"
        published_versions="${published_versions//$'\r'/''}"
        echo "published_versions=$published_versions" >> $GITHUB_ENV

    - name: Publish
      if: contains(fromJson(env.published_versions).versions, env.current_version) == false
      run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGETAPIKEY }} --source https://api.nuget.org/v3/index.json

    - name: Check run with curl
      if: always()
      run: |
        curl \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/maikelbos0/VDT.Core.Blazor.GlobalEventHandler/check-runs \
        -d '{"name":"Test 123","head_sha":"${{ github.sha }}","status":"completed","conclusion":"success","output":{"title":"Test 123","summary":"**This** is the summary"}}'

    - name: Check run from action 
      uses: LouisBrunner/checks-action@v1.6.0
      if: always()
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Test XYZ
        conclusion: ${{ job.status }}
        output: |
          {
            "title": "This is the title",
            "summary": "**This** is the summary\n- Test\n- Test"
          }